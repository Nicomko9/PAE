package biz.ucc;

import static org.junit.Assert.*;
import static util.Util.*;

import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import biz.UserUcc;
import biz.exceptions.BusinessException;
import biz.objects.BusinessFactory;
import biz.objects.User;
import config.AppConfig;
import dal.dao.UserDao;

public class UserUccImplTest {

  private static UserUcc userUccImpl;
  private static User user;

  @BeforeClass
  public static void setUpBeforeClass() throws Exception {
    AppConfig appConfig = new AppConfig(AppConfig.APP_DEV);
    if(!appConfig.load())
      throw new Exception();
    userUccImpl =  (UserUcc) appConfig.getClassForName(UserUcc.class);
    user = BusinessFactory.getUser();
    fillUser(user, "prenom.nom@student.vinci.be", "prenom", "nom", "pre_junit", "motdepasse", 500);
    UserDao userDao = (UserDao) appConfig.getClassForName(UserDao.class);
    userDao.create(user);
  }
  
  @Before
  public void setUp() throws Exception {
    fillUser(user, "prenom.nom@student.vinci.be", "prenom", "nom", "pre_junit", "motdepasse", 500);
  }

  @AfterClass
  public static void tearDownAfterClass() throws Exception {
    /*User user = BusinessFactory.getUser();
    UserDao userDao = new UserDaoImpl(getClassForName("dal.DalBackendService"), getClassForName("biz.DtoFactory"));
    user.setPk(x);
    userDao.remove(user);*/
  }

  @Test (expected = BusinessException.class)
  public void testConnect1() {
    userUccImpl.connect(null, "motdepasse");
  }

  @Test (expected = BusinessException.class)
  public void testConnect2() {
    userUccImpl.connect("prenom", null);
  }

  @Test
  public void testConnect3() {
    assertNotNull(userUccImpl.connect("pre", "motdepasse"));
  }

  @Test
  public void testSubscribe1() {
    userUccImpl.subscribe(BusinessFactory.getUser());
  }
  
  @Test (expected = BusinessException.class)
  public void testSubscribe2() {
    userUccImpl.subscribe(user);
  }
  
  @Test (expected = BusinessException.class)
  public void testSubscribe3() {
    user.setLogin("test");
    userUccImpl.subscribe(user);
  }

  @Test (expected = BusinessException.class)
  public void testSubscribe4() {
    user.setEmail("test@pre.be");
    userUccImpl.subscribe(user);
  }
  
  @Test
  public void testSubscribe5() {
    user.setLogin("test_junit");
    user.setEmail("test@pre.be");
    assertTrue(userUccImpl.subscribe(user));
  }

  @Test
  public void testGetUserByLogin1() {
    assertEquals("pre",userUccImpl.getUserByLogin("pre_junit").getLogin());
  }

  @Test
  public void testGetUserByLogin2() {
    assertNull(userUccImpl.getUserByLogin("dhiz"));
  }
  
}
