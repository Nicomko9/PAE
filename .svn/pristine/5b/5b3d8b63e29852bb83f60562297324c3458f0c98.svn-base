application.define("objects/jes", function() {
  var loading = false;

  var object;
  var pk     = {};
  var listJe = [];

  function listPks() {
    pk = {};
    for (var k in listJe) {
      pk[listJe[k].pk] = k;
    }
  }

  function addJe(data) {
    if (data == null) {
      return;
    }
    listJe.push(data);
    listJe.sort(function(a, b) {
      return a.pk - b.pk;
    });
    listPks();
    object.notify();
  }

  /**
   * Load JE's at user loading time
   */
  application.require("objects/user").watch(function(data) {
    loading = true;

    console.log("Loading JE's");
    application.require("utils/ajax").create({
      url : "/app/je/list",
      success : function(data) {
        listJe = data;
        listPks();
        object.isReady();
        object.notify();
        loading = false;
      }
    }, undefined, function() {
      loading = false;
    });
  }, "connection");

  var o = {
    load   : function (annee, callback) {
      if (loading) {
        setTimeout(function() {
          o.load(annee, callback);
        }, 50);

        return;
      }

      if (o.contains(annee)) {
        callback(listJe[pk[annee]]);
      } else {
        application.require("utils/ajax").create("/app/je", {
          data: {
            year: annee
          },
          success : function (data) {
            addJe(data);
            callback();
          }
        })
      }
    },
    create : function (date, callback) {
      console.log("Creating JE : " + date);
      application.require("utils/ajax").create({
        url  : "/app/je/create",
        data : { date : date },
        success : function(data) {
          addJe(data);
          callback(data);
        }
      });
    },
    contains : function (k) {
      return typeof pk[k] != "undefined";
    },
    countJe  : function() {
      return listJe.length;
    },
    futureJe : function () {
      return listJe.filter(function(e) {
        return e.pk > application.currentYear;
      });
    },
    pastJe : function () {
      return listJe.filter(function(e) {
        return e.pk < application.currentYear;
      });
    },
    currentJe : function () {
      return listJe.filter(function(e) {
        return e.pk == application.currentYear;
      });
    }
  };

  object = application.require("objects/object")("je", o);

  return o;
} ());