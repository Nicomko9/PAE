<project xmlns:jacoco="antlib:org.jacoco.ant" basedir="." default="dist" name="MyProject">
  <description>simple example build file</description>
  <!--  set global properties for this build  -->
  <property name="encoding" value="UTF-8"/>
  <property location="src" name="src"/>
  <property location="test" name="test"/>
  <property location="doc" name="doc"/>
  <property location="bin" name="build"/>
  <property location="dist" name="dist"/>
  <property name="lib.dir" value="lib"/>
  <property name="findbugs.home" value="/var/lib/jenkins/extra/findbugs-3.0.1"/>
  <property name="instrumented.dir" value="inslib2"/>
  <property name="report.dir" value="dist"/>
  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
  </path>
  <path id="findbugsclasspath">
    <fileset dir="/var/lib/jenkins/extra/findbugs-3.0.1/lib" includes="**/*.jar"/>
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
    <fileset dir="${dist}/lib" includes="**/*.jar"/>
  </path>
  <path id="pmdclasspath">
    <fileset dir="/var/lib/jenkins/extra/pmd-bin-5.4.1/lib" includes="**/*.jar"/>
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="${dist}/lib" includes="**/*.jar"/>
  </path>
  <taskdef resource="/org/jacoco/ant/antlib.xml" uri="antlib:org.jacoco.ant">
    <classpath path="/var/lib/jenkins/extra/jacoco-0.7.5/lib/jacocoant.jar"/>
  </taskdef>
  <target name="init">
    <!--  Create the time stamp  -->
    <tstamp/>
    <!--
 Create the build directory structure used by compile 
-->
    <mkdir dir="${build}"/>
  </target>
  <target depends="init" description="compile the source " name="compile">
    <!--  Compile the java code from ${src} into ${build}  -->
    <javac classpathref="classpath" debug="true" debuglevel="lines,vars,source" destdir="${build}"
      encoding="${encoding}" srcdir="${src}"/>
    <javac classpathref="classpath" debug="true" debuglevel="lines,vars,source" destdir="${build}"
      encoding="${encoding}" srcdir="${test}"/>
  </target>
  <target depends="compile" description="generate the distribution" name="dist">
    <!--  Create the distribution directory  -->
    <mkdir dir="${dist}/lib"/>
    <!--
 Put everything in ${build} into the MyProject-${DSTAMP}.jar file 
-->
    <jar basedir="${build}" jarfile="${dist}/lib/MyProject-${DSTAMP}.jar"/>
  </target>
  <target description="clean up" name="clean">
    <!--  Delete the ${build} and ${dist} directory trees  -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${instrumented.dir}"/>
    <delete dir="inslib"/>
    <delete dir="inslib2"/>
  </target>
  <target depends="dist" description="CopyPasteDetector" name="cpd">
    <delete file="${dist}/cpd.xml"/>
    <taskdef classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmdclasspath" name="cpd"/>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <trycatch>
      <try>
        <cpd format="xml" minimumTokenCount="100" outputFile="${dist}/cpd.xml">
          <fileset dir="${src}">
            <include name="**/*.java"/>
            <include name="**/*.js"/>
          </fileset>
        </cpd>
      </try>
      <catch>
        <echo>CPD failed.</echo>
      </catch>
    </trycatch>
  </target>
  <target depends="dist" description="Findbugs" name="findbugs">
    <delete file="${dist}/findbugs.xml"/>
    <taskdef classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugsclasspath"
      name="findbugs"/>
    <findbugs home="${findbugs.home}" output="xml" outputFile="${dist}/findbugs.xml">
      <auxClasspath>
        <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <!--
        <fileset dir="/usr/share/java" includes="junit.jar" />
-->
      </auxClasspath>
      <sourcePath path="${src}"/>
      <class location="${build}"/>
    </findbugs>
  </target>
  <path id="checkstyle.classpath">
    <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
    <fileset dir="${dist}/lib" includes="*.jar"/>
    <fileset file="/var/lib/jenkins/extra/checkstyle-6.14.1/checkstyle-6.14.1-all.jar"/>
  </path>
  <target depends="dist" description="Checkstyle" name="checkstyle">
    <delete file="${dist}/checkstyle.xml"/>
    <taskdef classpathref="checkstyle.classpath" resource="checkstyletask.properties"/>
    <checkstyle classpathref="checkstyle.classpath" config="/var/lib/jenkins/extra/ipl_checks.xml"
      failOnViolation="false">
      <fileset dir="${src}" includes="**/*.java"/>
      <formatter toFile="${dist}/checkstyle.xml" type="xml"/>
    </checkstyle>
  </target>
  <target depends="dist" description="Javadoc" name="javadoc">
    <delete dir="${doc}"/>
    <mkdir dir="${doc}"/>
    <javadoc author="true" charset="utf-8" classpathref="classpath" defaultexcludes="yes"
      destdir="${doc}" docencoding="UTF-8" encoding="${encoding}" use="true"
      version="true">
      <fileset dir="${src}"/>
    </javadoc>
    <!--  excludepackagenames="com.dummy.test.doc-files.*"  -->
  </target>
  <target name="junit">
    <delete dir="${dist}/junit"/>
    <mkdir dir="${dist}/junit"/>
    <jacoco:coverage>
      <junit failureProperty="test.failed" fork="true" forkmode="once">
        <classpath>
          <fileset dir="${lib.dir}" includes="**/*.jar"/>
          <fileset dir="${dist}/lib" includes="**/*.jar"/>
          <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
        </classpath>
        <formatter type="xml"/>
        <batchtest todir="${dist}/junit">
          <fileset dir="${test}" includes="**/Test*.java"/>
          <fileset dir="${test}" includes="**/*Test.java"/>
        </batchtest>
      </junit>
    </jacoco:coverage>
  </target>
  <target depends="dist" description="JUnit Testing" name="simplejunit">
    <delete dir="${dist}/junit"/>
    <mkdir dir="${dist}/junit"/>
    <junit failureProperty="test.failed">
      <classpath>
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <fileset dir="${dist}/lib" includes="**/*.jar"/>
        <fileset dir="/var/lib/jenkins/extra/lib" includes="*.jar"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${dist}/junit">
        <fileset dir="${test}" includes="**/Test*.java"/>
        <fileset dir="${test}" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>
  <target depends="clean,cpd,checkstyle,findbugs,javadoc,junit" description="Jenkins target"
    name="jenkins">
  </target>
</project>
