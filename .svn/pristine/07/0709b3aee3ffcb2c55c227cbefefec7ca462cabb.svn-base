package dal;

import config.AppConfig;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

class DalServices implements DalBackEndServices, DalFrontEndServices {

  private static final String dbDriver = AppConfig.getProperty("db.driver", "jdbc:postgresql://");
  private static final String dbPath = AppConfig.getProperty("db.path");
  private static final String dbDatabase = AppConfig.getProperty("db.db_name");
  private static final String dbLogin = AppConfig.getProperty("db.login");
  private static final String dbPassword = AppConfig.getProperty("db.password");

  private Connection connection;

  private Map<String, PreparedStatement> statementMap = new HashMap<>();

  public DalServices() throws SQLException {

    try {
      this.connection =
          DriverManager.getConnection(dbDriver + dbPath + "/" + dbDatabase, dbLogin, dbPassword);

    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }
  }

  public void startTransaction() {
    try {
      this.connection.setAutoCommit(false);
    } catch (SQLException e) {
      // Handle exception
    }
  }

  public void commitTransaction() {
    try {
      this.connection.commit();
      this.connection.setAutoCommit(true);
    } catch (SQLException e) {
      // Handle exception
    }
  }

  public void rollbackTransaction() {
    try {
      this.connection.rollback();
      this.connection.setAutoCommit(true);
    } catch (SQLException e) {
      // Handle exception
    }
  }

  public PreparedStatement prepareStatement(String statement) {
    try {
      if (this.statementMap.containsKey(statement)) {
        return this.statementMap.get(statement);
      }

      PreparedStatement stmt = this.connection.prepareStatement(statement);
      this.statementMap.put(statement, stmt);

      return stmt;
    } catch (SQLException e) {
      // Handle exception
      return null;
    }
  }

}
