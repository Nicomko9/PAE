application
		.define(
				"template",
				function() {
					var inAnimation;
					var currentDisplay;

					var connectedLoaded = false;

					/*
					 * Au chargement du template connecté, liste les JE
					 * précédentes :)
					 */
					function loadPreviousJe() {
						if (connectedLoaded == true) {
							return;
						}
						connectedLoaded = true;

						$
								.ajax("/app/je/previous", {
									method : "POST",
									dataType : "JSON"
								})
								.done(
										function(data) {
											var menu = $("#previousJE");
											if (data.length == 0) {
												menu
														.append('<li><a href="#">'
																+ (application.currentYear - 1)
																+ "-"
																+ application.currentYear
																+ ' (current)</a></li>');
												menu
														.append("<li><a href='#' class='text-muted'>No previous JE</a></li>")
											}

											for ( var i in data) {
												var o = data[i];

												menu
														.append('<li><a href="#" data-view="je:main" data-context=\''
																+ JSON
																		.stringify({
																			"year" : o.dayYear-1
																		})
																+ '\'>'
																+ (o.dayYear - 1)
																+ "-"
																+ o.dayYear
																+ " "
																+ ((o.dayYear == application.currentYear) ? " (current)"
																		: "")
																+ '</a></li>');
											}

											menu
													.append('<li><a href="#">Historique complet</a></li>');
										});
					}

					/*
					 * Change de container principal
					 */
					function switchContainer(event) {
						var display;

						if (typeof event == "object") {
							event.preventDefault();
							display = $(this).attr("data-toggle");
						} else {
							display = event;
						}

						var id = "page_" + display.slice("container-".length);

						if (inAnimation || $("body").attr("id") === id) {
							return;
						}

						inAnimation = true;

						$("body > .page-container:not(" + display + ")")
								.fadeOut(0);
						$("#" + display).fadeIn(250, function() {
							inAnimation = false;
							currentDisplay = display;
							$("body").attr("id", id);
						});
					}

					/*
					 * Charge une vue dynamiquement
					 */
					var loadView = function(view, target, callback) {
						if (typeof target === "function"
								&& typeof callback == "undefined") {
							callback = target;
							target = null;
						}

						$.ajax("/html/" + view, {
							dataType : "html"
						}).done(function(html) {
							if (target == null) {
								var i = $("div#page-wrapper");
							} else {
								var i = $("body#page_application " + target);
							}
							if (i.length == 0) {
								console.log("Unable to insert " + view + " !");

								return;
							}

							i.html(html);
							$("body").attr("data-toggle", view);

							if (typeof callback != "undefined") {
								callback();
							}
						}).fail(function() {
							console.log("Unable to load view " + view);
						})
					};

					/*
					 * Gère un click ou envoi de formulaire associé à une
					 * vue/template
					 */
					function handleEvent(event) {
						function c() {
							var r = view.substr(0, view.indexOf(":"));
							var v = view.substr(view.indexOf(":") + 1);

							console.log("Loading module " + r + " with " + v);

							application.require(r, v, context);
						}

						event.preventDefault();

						var template = $(this).attr("data-template");
						var view = $(this).attr("data-view");
						var context = $(this).attr("data-context");

						if (typeof context != "undefined") {
							context = JSON.parse(context);
						} else {
							context = undefined;
						}

						if (typeof template != "undefined") {
							console.log("Loading template " + template);

							loadView(template, $(this).attr(
									"data-template-holder"), c)
						} else if (typeof view == "string") {
							c();
						}
					}

					$(document).on("click", "a[data-view], a[data-template]",
							handleEvent);
					$(document).on("submit", "form[data-view]", handleEvent);

					/*
					 * View representation
					 */
					return {
						loadView : loadView,
						unconnected : function() {
							switchContainer("container-login");
						},
						connected : function() {
							switchContainer("container-application");
							loadPreviousJe();
							application.require("dashboard", "main");
						}
					}

				}());